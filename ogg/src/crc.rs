use std::num::{
    Wrapping,
    Wrapping as W,
};

pub static OGG_CRC_TABLE: [Wrapping<u32>; 256] = [
  W(0x00000000), W(0x04C11DB7), W(0x09823B6E), W(0x0D4326D9),
  W(0x130476DC), W(0x17C56B6B), W(0x1A864DB2), W(0x1E475005),
  W(0x2608EDB8), W(0x22C9F00F), W(0x2F8AD6D6), W(0x2B4BCB61),
  W(0x350C9B64), W(0x31CD86D3), W(0x3C8EA00A), W(0x384FBDBD),
  W(0x4C11DB70), W(0x48D0C6C7), W(0x4593E01E), W(0x4152FDA9),
  W(0x5F15ADAC), W(0x5BD4B01B), W(0x569796C2), W(0x52568B75),
  W(0x6A1936C8), W(0x6ED82B7F), W(0x639B0DA6), W(0x675A1011),
  W(0x791D4014), W(0x7DDC5DA3), W(0x709F7B7A), W(0x745E66CD),
  W(0x9823B6E0), W(0x9CE2AB57), W(0x91A18D8E), W(0x95609039),
  W(0x8B27C03C), W(0x8FE6DD8B), W(0x82A5FB52), W(0x8664E6E5),
  W(0xBE2B5B58), W(0xBAEA46EF), W(0xB7A96036), W(0xB3687D81),
  W(0xAD2F2D84), W(0xA9EE3033), W(0xA4AD16EA), W(0xA06C0B5D),
  W(0xD4326D90), W(0xD0F37027), W(0xDDB056FE), W(0xD9714B49),
  W(0xC7361B4C), W(0xC3F706FB), W(0xCEB42022), W(0xCA753D95),
  W(0xF23A8028), W(0xF6FB9D9F), W(0xFBB8BB46), W(0xFF79A6F1),
  W(0xE13EF6F4), W(0xE5FFEB43), W(0xE8BCCD9A), W(0xEC7DD02D),
  W(0x34867077), W(0x30476DC0), W(0x3D044B19), W(0x39C556AE),
  W(0x278206AB), W(0x23431B1C), W(0x2E003DC5), W(0x2AC12072),
  W(0x128E9DCF), W(0x164F8078), W(0x1B0CA6A1), W(0x1FCDBB16),
  W(0x018AEB13), W(0x054BF6A4), W(0x0808D07D), W(0x0CC9CDCA),
  W(0x7897AB07), W(0x7C56B6B0), W(0x71159069), W(0x75D48DDE),
  W(0x6B93DDDB), W(0x6F52C06C), W(0x6211E6B5), W(0x66D0FB02),
  W(0x5E9F46BF), W(0x5A5E5B08), W(0x571D7DD1), W(0x53DC6066),
  W(0x4D9B3063), W(0x495A2DD4), W(0x44190B0D), W(0x40D816BA),
  W(0xACA5C697), W(0xA864DB20), W(0xA527FDF9), W(0xA1E6E04E),
  W(0xBFA1B04B), W(0xBB60ADFC), W(0xB6238B25), W(0xB2E29692),
  W(0x8AAD2B2F), W(0x8E6C3698), W(0x832F1041), W(0x87EE0DF6),
  W(0x99A95DF3), W(0x9D684044), W(0x902B669D), W(0x94EA7B2A),
  W(0xE0B41DE7), W(0xE4750050), W(0xE9362689), W(0xEDF73B3E),
  W(0xF3B06B3B), W(0xF771768C), W(0xFA325055), W(0xFEF34DE2),
  W(0xC6BCF05F), W(0xC27DEDE8), W(0xCF3ECB31), W(0xCBFFD686),
  W(0xD5B88683), W(0xD1799B34), W(0xDC3ABDED), W(0xD8FBA05A),
  W(0x690CE0EE), W(0x6DCDFD59), W(0x608EDB80), W(0x644FC637),
  W(0x7A089632), W(0x7EC98B85), W(0x738AAD5C), W(0x774BB0EB),
  W(0x4F040D56), W(0x4BC510E1), W(0x46863638), W(0x42472B8F),
  W(0x5C007B8A), W(0x58C1663D), W(0x558240E4), W(0x51435D53),
  W(0x251D3B9E), W(0x21DC2629), W(0x2C9F00F0), W(0x285E1D47),
  W(0x36194D42), W(0x32D850F5), W(0x3F9B762C), W(0x3B5A6B9B),
  W(0x0315D626), W(0x07D4CB91), W(0x0A97ED48), W(0x0E56F0FF),
  W(0x1011A0FA), W(0x14D0BD4D), W(0x19939B94), W(0x1D528623),
  W(0xF12F560E), W(0xF5EE4BB9), W(0xF8AD6D60), W(0xFC6C70D7),
  W(0xE22B20D2), W(0xE6EA3D65), W(0xEBA91BBC), W(0xEF68060B),
  W(0xD727BBB6), W(0xD3E6A601), W(0xDEA580D8), W(0xDA649D6F),
  W(0xC423CD6A), W(0xC0E2D0DD), W(0xCDA1F604), W(0xC960EBB3),
  W(0xBD3E8D7E), W(0xB9FF90C9), W(0xB4BCB610), W(0xB07DABA7),
  W(0xAE3AFBA2), W(0xAAFBE615), W(0xA7B8C0CC), W(0xA379DD7B),
  W(0x9B3660C6), W(0x9FF77D71), W(0x92B45BA8), W(0x9675461F),
  W(0x8832161A), W(0x8CF30BAD), W(0x81B02D74), W(0x857130C3),
  W(0x5D8A9099), W(0x594B8D2E), W(0x5408ABF7), W(0x50C9B640),
  W(0x4E8EE645), W(0x4A4FFBF2), W(0x470CDD2B), W(0x43CDC09C),
  W(0x7B827D21), W(0x7F436096), W(0x7200464F), W(0x76C15BF8),
  W(0x68860BFD), W(0x6C47164A), W(0x61043093), W(0x65C52D24),
  W(0x119B4BE9), W(0x155A565E), W(0x18197087), W(0x1CD86D30),
  W(0x029F3D35), W(0x065E2082), W(0x0B1D065B), W(0x0FDC1BEC),
  W(0x3793A651), W(0x3352BBE6), W(0x3E119D3F), W(0x3AD08088),
  W(0x2497D08D), W(0x2056CD3A), W(0x2D15EBE3), W(0x29D4F654),
  W(0xC5A92679), W(0xC1683BCE), W(0xCC2B1D17), W(0xC8EA00A0),
  W(0xD6AD50A5), W(0xD26C4D12), W(0xDF2F6BCB), W(0xDBEE767C),
  W(0xE3A1CBC1), W(0xE760D676), W(0xEA23F0AF), W(0xEEE2ED18),
  W(0xF0A5BD1D), W(0xF464A0AA), W(0xF9278673), W(0xFDE69BC4),
  W(0x89B8FD09), W(0x8D79E0BE), W(0x803AC667), W(0x84FBDBD0),
  W(0x9ABC8BD5), W(0x9E7D9662), W(0x933EB0BB), W(0x97FFAD0C),
  W(0xAFB010B1), W(0xAB710D06), W(0xA6322BDF), W(0xA2F33668),
  W(0xBCB4666D), W(0xB8757BDA), W(0xB5365D03), W(0xB1F740B4),
];

#[inline]
pub fn crc32(crc_reg: &mut u32, byte: u8) {
    let crc = W(*crc_reg);
    let W(tidx) = ((crc >> 24) & W(0xFF)) ^ W(byte as u32);
    let W(new_crc) = (crc << 8) ^ OGG_CRC_TABLE[tidx as usize];
    *crc_reg = new_crc;
}
